(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{361:function(t,e,a){"use strict";a.r(e);var n=a(14),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("使用 webpack 的 devServer插件可以实现本地代理，用来在测试环境下实现跨域，方便我们用来测试。")]),t._v(" "),a("p",[t._v("操作也十分简单，只需要proxy中将需要的接口按照格式写入即可。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("devServer: { // 代理\n    port: 8080,\n    proxy: { // 配置跨域\n      '/api': {\n        target: 'https://test.com', // 此处填写需要模拟的api\n        changeOrigin: true,  // 如果target是域名，则需要设置为true\n        secure: false, // false表示支持https协议\n        pathRewrite: {\n          '^/api': ''// 请求的时候使用这个api就可以\n        }\n      }\n    }\n  }\n")])])]),a("p",[t._v("在页面中使用时若需要访问 test.com 只需要访问 /api 即可。如访问:"),a("code",[t._v("/api/sign/upload")]),t._v("就等于访问 "),a("code",[t._v("https://test.com/sign/upload")])]),t._v(" "),a("p",[t._v("但是在 network 中查看会变成"),a("code",[t._v("http://localhost:8080/api/sign/upload")])])])}),[],!1,null,null,null);e.default=s.exports}}]);