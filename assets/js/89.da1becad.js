(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{363:function(t,a,s){"use strict";s.r(a);var n=s(14),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"vue-sync-指令的用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-sync-指令的用法"}},[t._v("#")]),t._v(" vue.sync 指令的用法")]),t._v(" "),s("p",[t._v(".sync 其实只是一个语法糖")]),t._v(" "),s("p",[t._v("在组件间传递数据时，经常会有这种情况：父组件为子组件传递了一个值，子组件接收后，拷贝了一个副本（因为单向数据流，不可以直接修改props），修改副本后将修改后的值返回父组件。")]),t._v(" "),s("p",[t._v("这种我们一般如何处理呢?")]),t._v(" "),s("ol",[s("li",[t._v("将变量通过"),s("code",[t._v("v-bind")]),t._v("传入，同时使用"),s("code",[t._v("v-on")]),t._v("监听一个修改事件")]),t._v(" "),s("li",[t._v("子组件拷贝一个副本，子组件修改了值后，通过"),s("code",[t._v("$emit")]),t._v("方法触发监听")]),t._v(" "),s("li",[t._v("父组件在一个方法中接收到"),s("code",[t._v("emit")]),t._v("传来的值，完成父子组件值的“双向绑定”")])]),t._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[t._v("// 父组件\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("child-component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":data")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@dataChange")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("handledataChange"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("child-component")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nmethods"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handledataChange")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("val")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" val "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接收子组件返回的值")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[t._v("// 子组件\nprops:{\n\tdata:Number\n},\ndata(){\n\treturn {\n\t\tnewData:this.data\n\t}\n},\nmethods:{\n\tchange(){\n\t\tthis.newData++\n\t\tthis.$emit('dataChange',this.newData) // 触发dataChange事件，顺带将改变的值返回\n\t}\n")])])]),s("p",[t._v("这个方法在实现上并没有问题，但是在"),s("strong",[t._v("语义上")]),t._v("大有问题。")]),t._v(" "),s("p",[t._v("在一段时间之后我们忘记了代码，或别人接手了项目后，问题就凸显出来了。我们无法一眼就看出哪些数据是否和子组件进行了“绑定”，需要经过调试才能知道，这样做使得代码的维护存在了隐患。")]),t._v(" "),s("p",[t._v("所以 Vue 在 2.3 版本提供了 "),s("code",[t._v(".sync")]),t._v("修饰符，那原先的代码变成什么样了呢？")]),t._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[t._v("// 父组件\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("child-component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":data.sync")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("child-component")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[t._v("// 子组件\nprops:{\n\tdata:Number\n},\ndata(){\n\treturn {\n\t\tnewData:this.data\n\t}\n},\nmethods:{\n\tchange(){\n\t\tthis.newData++\n\t\tthis.$emit('update:data',this.newData) // 触发dataChange事件，顺带将改变的值返回\n\t}\n")])])]),s("p",[t._v("我们可以发现，子组件只改变了"),s("code",[t._v("emit")]),t._v("事件，"),s("strong",[t._v("明确告诉父组件发生了update更新事件")]),t._v("，更新了data值，语义更清晰了！")]),t._v(" "),s("p",[t._v("父组件变化更大，省略了一个自定义事件事件，减少了一个监听函数，同时，明确告诉子组件这是一个双向绑定的值，一目了然。")]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("越是成熟的代码，越是成熟的程序员，越会关注代码的可读性和语义性！坚持使用语义良好的开发习惯，未来的人（或许是自己）会感谢你的！")])])}),[],!1,null,null,null);a.default=e.exports}}]);