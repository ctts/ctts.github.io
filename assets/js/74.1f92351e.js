(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{374:function(t,s,n){"use strict";n.r(s);var a=n(14),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"深入javascript之从es规范理解动态作用域（this）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#深入javascript之从es规范理解动态作用域（this）"}},[t._v("#")]),t._v(" 深入JavaScript之从ES规范理解动态作用域（this）")]),t._v(" "),n("img",{attrs:{src:"https://s1.ax1x.com/2020/03/18/8DkhKP.jpg",alt:"8DkhKP.jpg",border:"0"}}),t._v(" "),n("h2",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),n("blockquote",[n("p",[t._v("虽然标题说的是动态作用域，但是第一要明确的是，"),n("strong",[t._v("JavaScript 其实不存在动态作用域，只存在词法作用域")]),t._v("。只是 this 的形态和机制和动态作用域太相像了，所以我们直接用方便理解的动态作用域来理解。虽说 JavaScript 的 this 是公认的难以理解，但是不管是Vue开发还是React，this出现的频率都是很高的。那么今天就来真正深入地了解了解 this 吧。")])]),t._v(" "),n("p",[t._v("我是练习时长两年半的前端实习生（误）小c，看看今天有什么博客好看的，动态作用域？没听说过，懒得看。ctrl+f4再见。（常规开局）")]),t._v(" "),n("p",[t._v("开始快乐的学习时间，看看笔试题吧。")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'global'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'local'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" bar "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bar"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" bar3 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bar2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bar"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbar2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bar3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),n("img",{attrs:{src:"https://s1.ax1x.com/2020/03/15/83kbRA.jpg",alt:"83kbRA.jpg",border:"0"}}),t._v(" "),n("p",[t._v("这代码是人写出来的吗？？？")]),t._v(" "),n("p",[t._v("答案是：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("foo\nfoo2\nglobal\n")])])]),n("p",[t._v("…默默打开关掉的博客。")]),t._v(" "),n("h2",{attrs:{id:"什么是this"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是this"}},[t._v("#")]),t._v(" 什么是this")]),t._v(" "),n("blockquote",[n("p",[t._v("在之前我们讲了"),n("strong",[t._v("静态作用域")]),t._v("，接下来我们要做的事情就是：把之前将的全部忘掉！在使用this时，不要使用任何关于静态作用域的知识点！")])]),t._v(" "),n("p",[t._v("对this的常见误区(注意！以下为错误观点)：")]),t._v(" "),n("p",[t._v("1.this指向function本身。X")]),t._v(" "),n("p",[t._v("2.this指向function的词法作用域。X")]),t._v(" "),n("p",[t._v("其实以上两点是新手经常会犯的错误，我们只需要看到两个例子就可以解决这个问题。")]),t._v(" "),n("p",[t._v("例1：")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ntest"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])]),n("p",[t._v("答案并不是我们所期待的 "),n("code",[t._v("1 ,undefined")]),t._v("，而是 "),n("code",[t._v("2 ，1")]),t._v("。这充分地说明了第一点，"),n("strong",[t._v("this并不指向function本身")]),t._v("，那么 test 中的this指向谁呢？从下面的"),n("code",[t._v("window.mun = 1")]),t._v(" 我们可以看出来指向了 window ，原因会在下文引出。")]),t._v(" "),n("p",[t._v("例2：")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n")])])]),n("p",[t._v("答案也并非我们期望的 1 ，而是 undefined 。这也正如上文的第二点："),n("strong",[t._v("this并非指向当前function的词法作用域")])]),t._v(" "),n("hr"),t._v(" "),n("p",[t._v("那么this到底是什么呢？")]),t._v(" "),n("blockquote",[n("p",[t._v("引自"),n("a",{attrs:{href:"https://ecma-international.org/ecma-262/5.1/#sec-11.1.1",target:"_blank",rel:"noopener noreferrer"}},[t._v("《ECMAScript标准规范》"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("The "),n("code",[t._v("this")]),t._v(" keyword evaluates to the value of the ThisBinding of the current execution context.")]),t._v(" "),n("p",[t._v("译："),n("code",[t._v("this")]),t._v("关键字代表的是当前"),n("strong",[t._v("执行上下文")]),t._v("的 "),n("code",[t._v("thisBinding")])])]),t._v(" "),n("img",{attrs:{src:"https://s1.ax1x.com/2020/03/21/8WBkOf.jpg",alt:"8WBkOf.jpg",border:"0",height:"200"}}),t._v(" "),n("blockquote",[n("p",[t._v("小c：“说的是啥呀，谁听得懂呀？”")])]),t._v(" "),n("p",[t._v("虽然讲解一个抽象的东西最愚蠢的方法就是用另一个抽象的东西来比喻它，但是毕竟是"),n("strong",[t._v("深入JavaScript")]),t._v("，有些概念还是必须知道的。")]),t._v(" "),n("p",[t._v("通过这段话，我们知道了"),n("strong",[t._v("this")]),t._v("，其实是由两个关键字决定的，执行上下文、thisBinding 。")]),t._v(" "),n("p",[t._v("理解这段话的前提是知道什么是"),n("strong",[t._v("执行上下文")]),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"执行上下文"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#执行上下文"}},[t._v("#")]),t._v(" 执行上下文")]),t._v(" "),n("ol",[n("li",[t._v("JavaScript 开始执行全局代码时，就会创建一个执行栈（后进先执行）")]),t._v(" "),n("li",[t._v("每遇到一次函数调用，就生成执行上下文，放入栈顶，执行当前函数代码")]),t._v(" "),n("li",[t._v("若继续遇到内部函数调用，重复第2步，否则执行完毕，并从栈中弹出当前执行上下文")]),t._v(" "),n("li",[t._v("继续执行栈顶的执行上下文函数，直到栈空")])]),t._v(" "),n("p",[t._v("当 JavaScript 开始执行一段代码时，若遇到套嵌的函数，并非以队列（先进先执行）的形式执行，而是以栈（后进先执行）的形式执行这段代码，这其实很常见，如：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("function test1(){\n\tconsole.log(1)\n\ttest2()\n}\n\nfunction test2(){\n    console.log(2)\n    test3()\n}\n\nfunction test3(){\n    console.log(3)\n    test4()\n}\n\nfunction test4(){\n    console.log(4)\n    test5()\n}\n\nfunction test5(){\n    console.log(5)\n}\n\ntest1()\n")])])]),n("p",[t._v("再生动的代码也比不上动图展示来的好理解！")]),t._v(" "),n("img",{attrs:{src:"https://s1.ax1x.com/2020/03/21/8hhE7j.gif",alt:"8hhE7j.gif",border:"0"}}),t._v(" "),n("p",[t._v("在这里安利一个用来理解执行栈和时间循环的网站 "),n("a",{attrs:{href:"http://latentflip.com/loupe/?code=ZnVuY3Rpb24gdGVzdDEoKXsNCgljb25zb2xlLmxvZygxKQ0KCXRlc3QyKCkNCn0NCg0KZnVuY3Rpb24gdGVzdDIoKXsNCiAgICBjb25zb2xlLmxvZygyKQ0KICAgIHRlc3QzKCkNCn0NCg0KZnVuY3Rpb24gdGVzdDMoKXsNCiAgICBjb25zb2xlLmxvZygzKQ0KICAgIHRlc3Q0KCkNCn0NCg0KZnVuY3Rpb24gdGVzdDQoKXsNCiAgICBjb25zb2xlLmxvZyg0KQ0KICAgIHRlc3Q1KCkNCn0NCg0KZnVuY3Rpb24gdGVzdDUoKXsNCiAgICBjb25zb2xlLmxvZyg1KQ0KfQ0KDQp0ZXN0MSgp!!!",target:"_blank",rel:"noopener noreferrer"}},[t._v("loupe"),n("OutboundLink")],1),t._v("，是大佬 Philip Roberts 在 "),n("strong",[t._v("jsconf")]),t._v(" 中用来展示事件循环的工具。")]),t._v(" "),n("p",[t._v("自己动手执行一边，配合上面的文字讲解，你要是看了三遍还不懂，拿刀来砍我，好伐？")]),t._v(" "),n("blockquote",[n("p",[t._v("小c：“那么 执行上下文 和 this 有什么关系呢？”")])]),t._v(" "),n("p",[t._v("别急，我们回到上面那句话："),n("code",[t._v("this")]),t._v("关键字代表的是当前"),n("strong",[t._v("执行上下文")]),t._v("的 "),n("code",[t._v("thisBinding")]),t._v("、")]),t._v(" "),n("p",[t._v("我们搞清楚了 执行上下文 ，那么我们来看看 什么是 thisBinding。继续看文档，")]),t._v(" "),n("p",[n("strong",[t._v("Table 19 —Execution Context State Components")])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("Component")]),t._v(" "),n("th",[t._v("Purpose")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("LexicalEnvironment")]),t._v(" "),n("td",[t._v("Identifies the "),n("a",{attrs:{href:"https://ecma-international.org/ecma-262/5.1/#sec-10.2",target:"_blank",rel:"noopener noreferrer"}},[t._v("Lexical Environment"),n("OutboundLink")],1),t._v(" used to resolve identifier references made by code within this execution context.")])]),t._v(" "),n("tr",[n("td",[t._v("VariableEnvironment")]),t._v(" "),n("td",[t._v("Identifies the "),n("a",{attrs:{href:"https://ecma-international.org/ecma-262/5.1/#sec-10.2",target:"_blank",rel:"noopener noreferrer"}},[t._v("Lexical Environment"),n("OutboundLink")],1),t._v(" whose environment record holds bindings created by "),n("em",[t._v("VariableStatements")]),t._v(" and "),n("em",[t._v("FunctionDeclarations")]),t._v(" within this execution context.")])]),t._v(" "),n("tr",[n("td",[t._v("ThisBinding")]),t._v(" "),n("td",[n("strong",[t._v("The value associated with the "),n("code",[t._v("this")]),t._v(" keyword within ECMAScript code associated with this execution context.")]),t._v("（这个值在这个执行上下文中会和关键字this联系起来）")])])])]),t._v(" "),n("p",[t._v("读完这个表我们终于找到了 this 和 thisBinding 和 执行上下文的关系。")]),t._v(" "),n("ol",[n("li",[t._v("每当执行一个函数时，系统会生成一个 执行上下文")]),t._v(" "),n("li",[t._v("每个执行上下文生成时就需要确定三个属性：创建词法环境、创建变量环境、"),n("strong",[t._v("ThisBinding（也就是确定this的值）")])])]),t._v(" "),n("p",[t._v("前两者不再本文的讨论范围。")]),t._v(" "),n("p",[t._v("继续往下看文档，")]),t._v(" "),n("blockquote",[n("p",[t._v("The following steps are performed when control enters the execution context for function code contained in function object F, a caller provided thisArg, and a caller provided argumentsList:")]),t._v(" "),n("ol",[n("li",[t._v("If the function code is "),n("a",{attrs:{href:"https://ecma-international.org/ecma-262/5.1/#sec-10.1.1",target:"_blank",rel:"noopener noreferrer"}},[t._v("strict code"),n("OutboundLink")],1),t._v(", set the "),n("a",{attrs:{href:"https://ecma-international.org/ecma-262/5.1/#sec-10.3",target:"_blank",rel:"noopener noreferrer"}},[t._v("ThisBinding"),n("OutboundLink")],1),t._v(" to "),n("em",[t._v("thisArg")]),t._v(".")]),t._v(" "),n("li",[t._v("Else if "),n("em",[t._v("thisArg")]),t._v(" is "),n("strong",[t._v("null")]),t._v(" or "),n("strong",[t._v("undefined")]),t._v(", set the "),n("a",{attrs:{href:"https://ecma-international.org/ecma-262/5.1/#sec-10.3",target:"_blank",rel:"noopener noreferrer"}},[t._v("ThisBinding"),n("OutboundLink")],1),t._v(" to the global object.")]),t._v(" "),n("li",[t._v("Else if "),n("a",{attrs:{href:"https://ecma-international.org/ecma-262/5.1/#sec-8",target:"_blank",rel:"noopener noreferrer"}},[t._v("Type"),n("OutboundLink")],1),t._v("("),n("em",[t._v("thisArg")]),t._v(") is not Object, set the "),n("a",{attrs:{href:"https://ecma-international.org/ecma-262/5.1/#sec-10.3",target:"_blank",rel:"noopener noreferrer"}},[t._v("ThisBinding"),n("OutboundLink")],1),t._v(" to "),n("a",{attrs:{href:"https://ecma-international.org/ecma-262/5.1/#sec-9.9",target:"_blank",rel:"noopener noreferrer"}},[t._v("ToObject"),n("OutboundLink")],1),t._v("("),n("em",[t._v("thisArg")]),t._v(").")])])]),t._v(" "),n("p",[t._v("本人翻译（看得懂英文忽略）：")]),t._v(" "),n("blockquote",[n("p",[t._v("当执行进入函数对象的执行上下文时，"),n("strong",[t._v("函数调用者")]),t._v("会提供 "),n("strong",[t._v("thisArg")]),t._v(" 和 argumentsList ，并执行以下步骤（我截取了仅跟this操作有关的步骤）：")]),t._v(" "),n("ol",[n("li",[t._v("如果这个 function 处于严格模式下，让 "),n("strong",[t._v("ThisBinding")]),t._v(" 等于 "),n("strong",[t._v("thisArg")])]),t._v(" "),n("li",[t._v("否则，若不是严格模式下，并且 "),n("strong",[t._v("thisArg")]),t._v(" 的值为 null 或 undefined ，让 "),n("strong",[t._v("ThisBinding")]),t._v(" 等于 global")]),t._v(" "),n("li",[t._v("否则，若 "),n("strong",[t._v("thisArg")]),t._v(" 的类型不是 Object，将 "),n("strong",[t._v("thisArg")]),t._v(" 转化为Object, 让 "),n("strong",[t._v("ThisBinding")]),t._v(" 等于 thisArg")]),t._v(" "),n("li",[t._v("若非以上的情况，让 "),n("strong",[t._v("ThisBinding")]),t._v(" 等于 "),n("strong",[t._v("thisArg")])])])]),t._v(" "),n("p",[t._v("我们又将目光投向了 thisArg ，终于看到一个比较眼熟的东西了，感动的热泪盈眶。")]),t._v(" "),n("img",{attrs:{src:"https://s1.ax1x.com/2020/03/23/87fJnP.jpg",alt:"87fJnP.jpg",border:"0"}}),t._v(" "),n("p",[t._v("我们最常见到thisArg的地方就是 "),n("code",[t._v("Function.prototype.call()")])]),t._v(" "),n("img",{attrs:{src:"https://s1.ax1x.com/2020/03/23/87fj9H.png",alt:"87fj9H.png",border:"0"}}),t._v(" "),n("p",[t._v("好了，我们整理一下思路：")]),t._v(" "),n("p",[t._v("执行上下文 =》 ThisBinding =》 thisArg")]),t._v(" "),n("ol",[n("li",[t._v("函数执行（被调用），创建了一个执行上下文")]),t._v(" "),n("li",[t._v("创建时所作的第一步，就是给执行上下文的 ThisBinding 属性赋值")]),t._v(" "),n("li",[t._v("ThisBinding 属性赋值的流程就是上文的 thisArg 四步判断")])]),t._v(" "),n("p",[t._v("最终，编译器把 thisArg 赋值给了 this ，也就是我们用到的 this 了！")]),t._v(" "),n("h2",{attrs:{id:"绑定规则（确定this）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#绑定规则（确定this）"}},[t._v("#")]),t._v(" 绑定规则（确定this）")]),t._v(" "),n("p",[t._v("上面我们从标准规范的角度理解了一般情况下 Function 中的 this，如果现在我们来系统地将绑定分一下类。")]),t._v(" "),n("p",[t._v("如果真正看懂了上文，那么以下的内容是很简单的。")]),t._v(" "),n("h3",{attrs:{id:"默认绑定"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#默认绑定"}},[t._v("#")]),t._v(" 默认绑定")]),t._v(" "),n("p",[t._v("这是最常见的绑定，也就是"),n("strong",[t._v("独立函数调用")]),t._v("，这种调用我们其实可以理解为 window 在调用这个 function ，自然而然就是 window 提供 thisArg ， 所以 this 的值也就指向了 window （严格模式下为undefined）。这个行为对应了上文的")]),t._v(" "),n("blockquote",[n("ol",[n("li",[t._v("如果这个 function 处于严格模式下，让 "),n("strong",[t._v("ThisBinding")]),t._v(" 等于 "),n("strong",[t._v("thisArg")]),t._v("否则，")]),t._v(" "),n("li",[t._v("若不是严格模式下，并且 "),n("strong",[t._v("thisArg")]),t._v(" 的值为 null 或 undefined ，让 "),n("strong",[t._v("ThisBinding")]),t._v(" 等于 global")])])]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// window")]),t._v("\n")])])]),n("p",[t._v("很好理解。")]),t._v(" "),n("h3",{attrs:{id:"隐式绑定"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#隐式绑定"}},[t._v("#")]),t._v(" 隐式绑定")]),t._v(" "),n("p",[t._v("为什么叫它隐式绑定呢？因为"),n("strong",[t._v("它没有明确的告诉你 this 指向谁")]),t._v("，还需要你去猜！")]),t._v(" "),n("img",{attrs:{src:"https://s1.ax1x.com/2020/03/23/8H4tCF.jpg",alt:"8H4tCF.jpg",border:"0"}}),t._v(" "),n("p",[t._v("当函数的"),n("strong",[t._v("调用者是一个对象")]),t._v("时,或者说函数是某个对象属性时，也就是对象隐式提供 thisArg ，那么自然 this 也就指向了调用对象。值得注意的是，套嵌对象调用方法时，this指向的是最后调用的对象。")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\ta"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\to"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\ta"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tfunc"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("func\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nobj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("o"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])])]),n("p",[t._v("还有一种隐式调用，那就是"),n("strong",[t._v("函数以参数的形式被传递调用")]),t._v("，")]),t._v(" "),n("p",[t._v("但是这种隐式绑定有个致命的问题，它会发生"),n("strong",[t._v("隐式丢失")]),t._v("！")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'global'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doTest")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    a"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'obj'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    fn"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" test\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doTest")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// global")]),t._v("\n")])])]),n("p",[t._v("我们可以看到传递时函数确实是被"),n("code",[t._v("obj")]),t._v("调用，但是打印出来的确实 global。这个问题可以从另个角度来解决。")]),t._v(" "),n("p",[t._v("JavaScript传参的有两种形式：1.按值传递、2.按引用传递。")]),t._v(" "),n("p",[t._v("当参数类型是"),n("strong",[t._v("基本数据类型")]),t._v("时，一律是按值传递的，也就是传递的是一个副本，你在函数内部改变形参并不会改变外部的变量本身。")]),t._v(" "),n("p",[t._v("当参数类型时引用类型时（function是特殊的Object），传递的是一个引用，这个引用指向的是引用类型本身，（这里不展开讲，要不然又是一篇文章）所以当作参数时，**"),n("code",[t._v("test")]),t._v("函数已经不算是obj的属性了，它就是它自己，**一个普通的函数，"),n("strong",[t._v("隐式绑定就转化为了默认绑定")]),t._v("，所以以上代码可以转化为：")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'global'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doTest")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doTest")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 传递的是引用，所以 obj.fn 就是 test 本身，所以变成了默认绑定")]),t._v("\n")])])]),n("p",[t._v("隐式丢失部分有些难以理解，建议多花些时间理解。")]),t._v(" "),n("h3",{attrs:{id:"显式绑定"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#显式绑定"}},[t._v("#")]),t._v(" 显式绑定")]),t._v(" "),n("p",[t._v("显式绑定是我们比较提倡的绑定 this 的方式,也就是显式地告诉函数this指向谁，也就是使用 "),n("code",[t._v("call()")]),t._v(" "),n("code",[t._v("apply()")]),t._v(" "),n("code",[t._v("bind")]),t._v(" 这三个方法，这三个函数的用法不多说。")]),t._v(" "),n("p",[t._v("其实理解这三个函数的最好方法就是自己模拟一个，而且并不困难，是常规的面试题之一。")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// call 和 apply 通用")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("call")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("context")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Symbol")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 为了不覆盖context原本的属性，要确定fn是唯一的，所以使用symbol类型")]),t._v("\n    context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ？？？")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 隐式绑定this，调用函数，此为简易版，不添加参数，只绑定this")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除对象上挂载的属性")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("我们可以看到，其实 显示绑定 的原理就是 "),n("strong",[t._v("在函数内部实现一个隐式绑定")]),t._v(" ，不同的是，内部隐式绑定的对象是我们自己指定的，增强了可读性和可控性。")]),t._v(" "),n("p",[t._v("这里最有疑问的一步就在于第二步，灵魂四问：")]),t._v(" "),n("p",[t._v("此时的 this 为什么是函数本身？而且可以直接被调用执行？this不应该指向对象吗？对象还能被执行？")]),t._v(" "),n("img",{attrs:{src:"https://s1.ax1x.com/2020/03/25/8XVJKK.jpg",alt:"8XVJKK.jpg",border:"0"}}),t._v(" "),n("p",[t._v("现有的知识已经无法帮我解决问题了，"),n("strong",[t._v("查文档吧")]),t._v("。")]),t._v(" "),n("blockquote",[n("p",[n("a",{attrs:{href:"http://www.ecma-international.org/ecma-262/6.0/#sec-properties-of-the-function-prototype-object",target:"_blank",rel:"noopener noreferrer"}},[t._v("ecma-262"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("The Function prototype object is the intrinsic object %FunctionPrototype%. The Function prototype object is itself a built-in function object. When invoked, it accepts any arguments and returns "),n("strong",[t._v("undefined")]),t._v(". It does not have a [[Construct]] internal method so it is not a constructor.")])]),t._v(" "),n("p",[t._v("译：")]),t._v(" "),n("p",[t._v("函数原型对象是内部对象 %FunctionPrototype% 。"),n("strong",[t._v("prototype 本身就是一个内置的函数对象")]),t._v("。在调用时，它接受任何参数并返回 undefined 。它没有[[Construct]]内部方法，所以它不是一个构造函数。")]),t._v(" "),n("p",[t._v("…简单来说它即是函数又是对象？？？在文档下面还加了一段提示：")]),t._v(" "),n("blockquote",[n("p",[t._v("The Function prototype object is specified to be a function object to ensure compatibility with ECMAScript code that was created prior to the ECMAScript 2015 specification.")])]),t._v(" "),n("p",[t._v("译：")]),t._v(" "),n("p",[t._v("函数原型对象被指定为一个函数对象，以确保与ECMAScript代码的兼容性，该代码是在ECMAScript 2015规范之前创建的。")]),t._v(" "),n("p",[t._v("总而言之：prototype 既是对象又是函数（存疑），所以"),n("code",[t._v("context[fn] = this")]),t._v("此时的 this 就是调用 call 的函数本身，并且在下一步中对其进行调用。")]),t._v(" "),n("p",[t._v("这一步可以解释通了。")]),t._v(" "),n("h3",{attrs:{id:"bind硬绑定"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bind硬绑定"}},[t._v("#")]),t._v(" bind硬绑定")]),t._v(" "),n("p",[t._v("虽然已经有了 "),n("code",[t._v("call")]),t._v(" "),n("code",[t._v("apply")]),t._v("，但是这并不能满足我们的需求。我们可以发现，call和apply会 "),n("strong",[t._v("立即执行")]),t._v("这个函数，有些时候我们并不想那么做，我们只是想把这个函数指向改变，并保存下来，等到需要时进行调用。")]),t._v(" "),n("p",[t._v("其实原理也很简单，"),n("strong",[t._v("在外面再包一层壳不就好了")]),t._v("…")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("obj")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回一个匿名函数")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每次调用匿名函数就是调用一次call")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("理解"),n("code",[t._v("bind")]),t._v("的关键就在于：bind返回的是一个"),n("strong",[t._v("全新的函数")]),t._v("，已经不是我们传入的函数本身了。")]),t._v(" "),n("p",[t._v("为bind函数处理过的函数继续执行 call 是无效的，因为到最后，bind内部依然会执行自己的最后一次call ！被bind绑定过后就无法更改指向了！所以bind被称为"),n("strong",[t._v("硬绑定")])]),t._v(" "),n("p",[n("code",[t._v("bind")]),t._v("在react中运用十分频繁，理解bind还是很重要的。")]),t._v(" "),n("h3",{attrs:{id:"new绑定"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#new绑定"}},[t._v("#")]),t._v(" new绑定")]),t._v(" "),n("p",[t._v("new是一个操作符，可以创建一个对象，我们用一个函数来模拟一下")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 简易版，构造函数不返回值，旨在理解其中this，不涉及具体操作")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createObj")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" obj\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("来简略说说new的过程吧：")]),t._v(" "),n("ol",[n("li",[t._v("创建一个空对象")]),t._v(" "),n("li",[n("strong",[t._v("将构造函数的属性和作用域赋值给新对象")]),t._v("（此处直接使用"),n("code",[t._v("Object.create()完成了1、2两步")]),t._v("）")]),t._v(" "),n("li",[n("strong",[t._v("这个对象会绑定到函数调用的this")])]),t._v(" "),n("li",[t._v("如果构造函数没有返回其他对象，那么返回obj")])]),t._v(" "),n("p",[t._v("由于第二步和第三步，所以这个新对象的所有属性和方法默认都是指向这个 obj 的")]),t._v(" "),n("h3",{attrs:{id:"箭头函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数"}},[t._v("#")]),t._v(" 箭头函数")]),t._v(" "),n("p",[t._v("一句话，"),n("strong",[t._v("箭头函数没有自己的this")]),t._v("，因为没有自己的，自然也就只能问爸爸要了（外部作用域）。")]),t._v(" "),n("p",[t._v("很多人是自以为理解了这句话，来一道题。")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Outer")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" o "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    o"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flag "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fg\n    o"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getval")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 区别")]),t._v("\n\t\tconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" o\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" outer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Outer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nouter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getval")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ?")]),t._v("\n")])])]),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Outer")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" o "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    o"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flag "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fg\n    o"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getval")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 区别")]),t._v("\n\t\tconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" o\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" outer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Outer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nouter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getval")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ?")]),t._v("\n")])])]),n("p",[t._v("答案:")]),t._v(" "),n("p",[t._v("1."),n("code",[t._v("Outer {}")])]),t._v(" "),n("p",[t._v("2."),n("code",[t._v('{flag: "test", getval: ƒ}')])]),t._v(" "),n("p",[t._v("第 2 题，很好理解，我们可以看到唯一的区别就在于在构造函数内使用了箭头函数。")]),t._v(" "),n("p",[t._v("我们分析一下第 1 题，"),n("strong",[t._v("由于箭头函数没有自己的this")]),t._v("，所以此时的this就是父级的this，那我们直接分析父级的this，由于使用了"),n("code",[t._v("new")]),t._v("操作符"),n("code",[t._v("let outer = new Outer('test')")]),t._v("，所以此时的this已经绑定在了 outer 对象，所以是一个空对象。")]),t._v(" "),n("h2",{attrs:{id:"写在最后"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#写在最后"}},[t._v("#")]),t._v(" 写在最后")]),t._v(" "),n("ol",[n("li",[t._v("以上代码仅是模拟函数（call/bind/new），并非真实JavaScript源码，源码肯定没那么简单！")]),t._v(" "),n("li",[t._v("本文信息量极大，涉及到了：作用域、new、call、执行上下文、执行栈等知识点，若不理解可以搭配其他文章一起理解")]),t._v(" "),n("li",[t._v("本文看一遍应该无法完全理解…建议多看几遍")])]),t._v(" "),n("blockquote",[n("p",[t._v("小c：“看了那么久，直接看绑定规则不就完事了吗？前面的理论有啥用啊？”")])]),t._v(" "),n("p",[t._v("我感觉有很多人都会有这种观点，看了文档有啥了不起的，平时又用不上，除了能拿出去装X还能干啥…")]),t._v(" "),n("p",[t._v("有些东西仅仅知道怎么用确实够了，但是遇到现有的教程也没说到的问题，那么去哪里找答案呢？我们无法看到JavaScript内部运行的代码，但是我们可以通过文档知道它运行的逻辑，通过它的逻辑，从根源解决问题。")]),t._v(" "),n("p",[t._v("所以深入还是要靠文档，学会看文档是你突破瓶颈的方法之一！")])])}),[],!1,null,null,null);s.default=e.exports}}]);